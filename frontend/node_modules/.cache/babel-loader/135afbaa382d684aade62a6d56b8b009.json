{"remainingRequest":"C:\\Users\\SSAFY\\Desktop\\2차특화프로젝트\\S07P22A207\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\SSAFY\\Desktop\\2차특화프로젝트\\S07P22A207\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SSAFY\\Desktop\\2차특화프로젝트\\S07P22A207\\frontend\\src\\store\\accountStore.js","dependencies":[{"path":"C:\\Users\\SSAFY\\Desktop\\2차특화프로젝트\\S07P22A207\\frontend\\src\\store\\accountStore.js","mtime":1662336764821},{"path":"C:\\Users\\SSAFY\\Desktop\\2차특화프로젝트\\S07P22A207\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SSAFY\\Desktop\\2차특화프로젝트\\S07P22A207\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SSAFY\\Desktop\\2차특화프로젝트\\S07P22A207\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL1NTQUZZL0Rlc2t0b3AvMlx1Q0MyOFx1RDJCOVx1RDY1NFx1RDUwNFx1Qjg1Q1x1QzgxRFx1RDJCOC9TMDdQMjJBMjA3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyByZXF1ZXN0TG9naW4gfSBmcm9tICIuLi9jb21tb24vYXBpL2FjY291bnRBUEkiOwp2YXIgc3RhdGUgPSB7CiAgdG9rZW46IG51bGwKfTsKdmFyIGdldHRlcnMgPSB7CiAgZ2V0VG9rZW46IGZ1bmN0aW9uIGdldFRva2VuKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudG9rZW47CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldFRva2VuOiBmdW5jdGlvbiBzZXRUb2tlbihzdGF0ZSwgdG9rZW4pIHsKICAgIHN0YXRlLnRva2VuID0gdG9rZW47CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBsb2dpbkFjdGlvbjogZnVuY3Rpb24gKCkgewogICAgdmFyIF9sb2dpbkFjdGlvbiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmLCBsb2dpbkRhdGEpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdExvZ2luKGxvZ2luRGF0YSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgic2V0VG9rZW4iLCByZXNwb25zZS5kYXRhLmFjY2Vzc1Rva2VuKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gbG9naW5BY3Rpb24oX3gsIF94MikgewogICAgICByZXR1cm4gX2xvZ2luQWN0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGxvZ2luQWN0aW9uOwogIH0oKQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["C:/Users/SSAFY/Desktop/2차특화프로젝트/S07P22A207/frontend/src/store/accountStore.js"],"names":["requestLogin","state","token","getters","getToken","mutations","setToken","actions","loginAction","loginData","commit","response","data","accessToken","namespaced"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,0BAA7B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,kBAAAH,KAAK,EAAI;AACjB,WAAOA,KAAK,CAACC,KAAb;AACD;AAHa,CAAhB;AAMA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,kBAACL,KAAD,EAAQC,KAAR,EAAkB;AAC1BD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD;AAHe,CAAlB;AAMA,IAAMK,OAAO,GAAG;AACdC,EAAAA,WAAW;AAAA,+EAAE,uBAAmBC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,MAAT,QAASA,MAAT;AAAA;AAAA,qBACYV,YAAY,CAACS,SAAD,CADxB;;AAAA;AACLE,cAAAA,QADK;AAEXD,cAAAA,MAAM,CAAC,UAAD,EAAaC,QAAQ,CAACC,IAAT,CAAcC,WAA3B,CAAN;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADG,CAAhB;AAOA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbb,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbE,EAAAA,SAAS,EAATA,SAJa;AAKbE,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["import { requestLogin } from \"../common/api/accountAPI\";\r\n\r\nconst state = {\r\n  token: null\r\n};\r\n\r\nconst getters = {\r\n  getToken: state => {\r\n    return state.token;\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setToken: (state, token) => {\r\n    state.token = token;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  loginAction: async ({ commit }, loginData) => {\r\n    const response = await requestLogin(loginData);\r\n    commit(\"setToken\", response.data.accessToken);\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n};\r\n"]}]}